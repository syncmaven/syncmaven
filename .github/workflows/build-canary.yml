name: Canary Build

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-npm:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
          cache: "pnpm"

      - name: Install Bun
        run: |
          curl -fsSL https://bun.sh/install | bash
          echo 'export PATH="$HOME/.bun/bin:$PATH"' >> $GITHUB_ENV

      - name: Install pnpm
        run: npm install -g pnpm

      # Step 1: Build the Node project (once)
      - name: Check out repository
        uses: actions/checkout@v3

      - name: Cache pnpm dependencies
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm

      - name: Install and build
        run: |
          pnpm install
          pnpm build
          pnpm test

  build-docker:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch: [arm64, amd64]

    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          buildkitd-flags: --debug

      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: ~/.docker
          key: ${{ runner.os }}-docker-${{ matrix.arch }}
          restore-keys: |
            ${{ runner.os }}-docker

      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker images
        run: |
          docker buildx build \
            --platform linux/${{ matrix.arch }} \
            --tag syncmaven/syncmaven:canary-${{ matrix.arch }} \
            --push \
            .

  manifest:
    runs-on: ubuntu-latest
    needs: build-docker
    steps:
      - name: Log in to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Create and push manifest list
        run: |
          docker manifest create syncmaven/syncmaven:canary \
            --amend syncmaven/syncmaven:canary-amd64 \
            --amend syncmaven/syncmaven:canary-arm64
          docker manifest push syncmaven/syncmaven:canary
