name: Build and Publish

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
    inputs:
      release-version:
        description: "Release Version (optional)"
        required: false

jobs:
  build:
    name: "Build project and publish NPMs"
    runs-on: ubuntu-latest
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          registry-url: "https://registry.npmjs.org/"
          scope: "@syncmaven" # Replace with your npm scope if needed
          always-auth: true

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Check out repository
        uses: actions/checkout@v4

      - name: Cache pnpm dependencies
        uses: actions/cache@v4
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Build PNPM project
        run: pnpm build && pnpm test

      - name: Test PNPM project
        run: pnpm test

      - name: Set up Git user for publishing
        run: |
          git config --global user.name 'Syncmaven Builds'
          git config --global user.email 'dev@syncmaven.sh'

      - name: Publish canary version to NPM
        if: github.ref == 'refs/heads/main' && github.event.inputs.release-version == '' || github.event.inputs.release-version == 'canary'
        run: pnpm release:canary
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Publish release version to NPM
        if: github.event.inputs.release-version != ''
        run: pnpm release:stable --version ${{ github.event.inputs.release-version }} --publish
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

  build-docker:
    name: "Docker Build"
    # Don't automatically build on PRs and non-main branches
    if: github.ref == 'refs/heads/main' || github.event.inputs.release-version != ''
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # need this for build id below
          fetch-depth: 0

      - name: Set build ID
        id: versions
        run: |
          echo "build_id=$(git rev-list --count HEAD).$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: "lab:latest"
          driver: cloud
          endpoint: "vklmn/vklmn"
      - name: Push Docker image (Canary)
        uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          context: .
          tags: |
            syncmaven/syncmaven:${{ github.ref == 'refs/heads/main' || github.event.inputs.release-version == 'canary' && 'canary' || 'latest' }}
            syncmaven/syncmaven:${{ github.ref == 'refs/heads/main' || github.event.inputs.release-version == 'canary' && concat('canary-', github.event.inputs.release-version) || github.event.inputs.release-version }}
          outputs: type=registry,push=true

