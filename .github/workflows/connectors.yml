name: "Build and Publish Connectors"
on:
  workflow_dispatch:
    inputs:
      release-version:
        description: "Version. Can be either x.y.z or canary"
        required: true
      select:
        description: "Select connectors to build and publish (not implemented yet)"
        required: false
        default: "*"
jobs:
  build-node-based-docker:
    name: "Build a base image for Node-based connectors"
    #bogus check for future use, see above, this is always set
    if: github.event.inputs.release-version != ''
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: "lab:latest"
          driver: cloud
          endpoint: "vklmn/vklmn"
      # See https://github.com/reproducible-containers/buildkit-cache-dance for cache handling
      - name: Preserve PNPM cache
        uses: actions/cache@v3
        id: cache
        with:
          path: |
            pnpm-cache
          key: cache-${{ hashFiles('.github/workflows/test/Dockerfile') }}
      - name: inject cache into docker
        uses: reproducible-containers/buildkit-cache-dance@v3.1.0
        with:
          cache-map: |
            {
              "pnpm-cache": "/pnpm",
            }
          skip-extraction: ${{ steps.cache.outputs.cache-hit }}
      - name: "Build Docker Image"
        uses: docker/build-push-action@v5
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
          file: connectors.Dockerfile
          push: true
          context: .
          tags: syncmaven/tmp-base-image-for-node-connectors:${{ github.run_id }}
          outputs: type=registry,push=true
          #outputs: type=docker,dest=tmp-base-image-for-node-connectors-${{ github.run_id }}.tar
#      - name: Upload Docker image artifact
#        uses: actions/upload-artifact@v4
#        with:
#          name: tmp-base-image-for-node-connectors-${{ github.run_id }}
#          path: tmp-base-image-for-node-connectors-${{ github.run_id }}.tar

  build-connector-image:
    name: "Build a ${{ matrix.connector }} connector image"
    if: github.event.inputs.release-version != ''
    runs-on: ubuntu-latest
    needs: build-node-based-docker
    strategy:
      matrix:
        connector: [ resend ]
    steps:

      - name: Set build ID
        id: versions
        run: |
          echo "build_id=$(git rev-list --count HEAD).$(git rev-parse --short HEAD)" >> "$GITHUB_OUTPUT"

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: "lab:latest"
          driver: cloud
          endpoint: "vklmn/vklmn"
      - name: Select Version Tag
        id: docker_tag
        run: |
          if [ "${{ github.ref == 'refs/heads/main' || github.event.inputs.release-version == 'canary' }}" == "true" ]; then
            echo tag=canary-${{ steps.versions.outputs.build_id }} >> "$GITHUB_OUTPUT"
          else
            echo tag=${{ github.event.inputs.release-version }} >> "$GITHUB_OUTPUT"
          fi
      - name: Generate Docker File
        run: |
          cat > ${{ matrix.connector }}.Dockerfile << EOL
          FROM syncmaven/tmp-base-image-for-node-connectors:${{ github.run_id }}
          ENTRYPOINT ["/syncmaven/bin/node-main", "/syncmaven/packages/connectors/${{ matrix.connector }}"]
          EOL

      - name: "Build and Push Docker Images: ${{ matrix.connector }}"
        uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64,linux/arm64
          file: ${{ matrix.connector }}.Dockerfile
          push: true
          context: .
          tags: |
            syncmaven/${{ matrix.connector }}:${{ github.ref == 'refs/heads/main' || github.event.inputs.release-version == 'canary' && 'canary' || 'latest' }}
            syncmaven/${{ matrix.connector }}:${{ steps.docker_tag.outputs.tag }}
          outputs: type=registry,push=true
  cleanup-tmp-images:
    name: "Cleanup temporary images"
    if: github.event.inputs.release-version != ''
    runs-on: ubuntu-latest
    needs: build-connector-image
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: "Cleanup temporary images"
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
        run: ./bin/delete-docker-tag syncmaven/tmp-base-image-for-node-connectors ${{ github.run_id }}

