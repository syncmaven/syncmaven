name: "Connectors: build and publish"
on:
  workflow_dispatch:
    inputs:
      release-version:
        description: "Version. Can be either x.y.z or canary"
        required: true
      select:
        description: "Select connectors to build and publish (provide JSON array of connector names)"
        required: false
        default: '["resend", "twitter-ads", "people-data-labs", "intercom", "hubspot", "google-sheets"]'
      publish:
        type: boolean
        description: "Check if release should be published, otherwise it's a dry run"
        required: false
        default: true
      select-go:
        description: "Select go-connectors to build and publish (provide JSON array of connector names)"
        required: false
        default: '["mixpanel"]'
env:
  HUSKY: 0

jobs:
  prepare-tags:
    name: "Prepare tags for Docker images"
    outputs:
      build_id: ${{ steps.docker_tag.outputs.build_id }}
      docker_tag: ${{ steps.docker_tag.outputs.tag }}
      secondary_docker_tag: ${{ steps.docker_tag.outputs.secondary_tag }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          # We need this to get version
          fetch-depth: 0
      - name: Set Publishing Tags
        id: docker_tag
        run: |
          # Either canary version is set explicitely, or it's not set at all meaning it's automated build
          BUILD_ID="$(git rev-list --count HEAD).$(git rev-parse --short HEAD)"
          echo build_id=$BUILD_ID >> "$GITHUB_OUTPUT"
          if [ "${{ github.event.inputs.release-version == 'canary' || github.event.inputs.release-version == '' }}" == "true" ]; then
            echo "tag=canary-$BUILD_ID" >> "$GITHUB_OUTPUT"
            echo "secondary_tag=canary" >> "$GITHUB_OUTPUT"
          else
            echo tag=${{ github.event.inputs.release-version }} >> "$GITHUB_OUTPUT"
            echo secondary_tag=latest >> "$GITHUB_OUTPUT"
          fi

  build-node-based-docker:
    name: "Build a base image for Node-based connectors"
    # do things only on manually triggered builds or on main branch. On PRs we don't build connectors
    if: github.event.inputs.select != '[]' && (github.event.inputs.release-version != '' || github.ref == 'refs/heads/main')
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: "lab:latest"
          driver: cloud
          endpoint: "vklmn/vklmn"
      # See https://github.com/reproducible-containers/buildkit-cache-dance for cache handling
      - name: Preserve PNPM cache
        uses: actions/cache@v4
        id: cache
        with:
          path: |
            pnpm-cache
          key: cache-${{ hashFiles('.github/workflows/test/Dockerfile') }}
      - name: inject cache into docker
        uses: reproducible-containers/buildkit-cache-dance@v3.1.0
        with:
          cache-map: |
            {
              "pnpm-cache": "/pnpm"
            }
          skip-extraction: ${{ steps.cache.outputs.cache-hit }}
      - name: "Build Docker Image"
        uses: docker/build-push-action@v5
        with:
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64
          file: connectors.Dockerfile
          push: true
          context: .
          tags: syncmaven/tmp-base-image-for-node-connectors:${{ github.run_id }}
          outputs: type=registry,push=true
          #outputs: type=docker,dest=tmp-base-image-for-node-connectors-${{ github.run_id }}.tar
  #      - name: Upload Docker image artifact
  #        uses: actions/upload-artifact@v4
  #        with:
  #          name: tmp-base-image-for-node-connectors-${{ github.run_id }}
  #          path: tmp-base-image-for-node-connectors-${{ github.run_id }}.tar

  build-connector-image:
    name: "Build a ${{ matrix.connector }} connector image"
    # do things only on manually triggered builds or on main branch. On PRs we don't build connectors
    if: github.event.inputs.release-version != '' || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: [build-node-based-docker, prepare-tags]
    strategy:
      matrix:
        connector: ${{ fromJSON(github.event.inputs.select) }}
    steps:
      # We need checkout as a source for README
      - name: Checkout
        uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: "lab:latest"
          driver: cloud
          endpoint: "vklmn/vklmn"
      - name: Generate Docker File
        run: |
          cat > ${{ matrix.connector }}.Dockerfile << EOL
          FROM syncmaven/tmp-base-image-for-node-connectors:${{ github.run_id }}
          ENTRYPOINT ["/syncmaven/bin/node-main", "/syncmaven/packages/connectors/${{ matrix.connector }}"]
          EOL

      - name: "Build and Push Docker Images: ${{ matrix.connector }}"
        uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64,linux/arm64
          file: ${{ matrix.connector }}.Dockerfile
          push: ${{ github.event.inputs.publish }}
          context: .
          tags: |
            syncmaven/${{ matrix.connector }}:${{ needs.prepare-tags.outputs.docker_tag }}
            syncmaven/${{ matrix.connector }}:${{ needs.prepare-tags.outputs.secondary_docker_tag }}
          outputs: type=registry,push=true
      - name: "Update Docker Hub description"
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: syncmaven/${{ matrix.connector }}
          short-description: "Implementation of the connector ${{ matrix.connector }} for Syncmaven"
          readme: README.dockerhub-connectors.md
  cleanup-tmp-images:
    name: "Cleanup temporary images"
    # do things only on manually triggered builds or on main branch. On PRs we don't build connectors
    if: github.event.inputs.release-version != '' || github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    needs: build-connector-image
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: "Cleanup temporary images"
        env:
          DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKERHUB_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}
        run: ./bin/delete-docker-tag syncmaven/tmp-base-image-for-node-connectors ${{ github.run_id }}

  build-go-connectors:
    name: "Build Go-based ${{ matrix.connector }} connector image"
    if: github.event.inputs.select-go != '[]' && (github.event.inputs.release-version != '' || github.ref == 'refs/heads/main')
    runs-on: ubuntu-latest
    needs: prepare-tags
    strategy:
      matrix:
        connector: ${{ fromJSON(github.event.inputs.select-go) }}
    steps:
      # We need checkout as a source for README
      - name: Checkout
        uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          version: "lab:latest"
          driver: cloud
          endpoint: "vklmn/vklmn"
      - name: "Build and Push Docker Images: ${{ matrix.connector }}"
        uses: docker/build-push-action@v5
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          context: ./packages/connectors/${{ matrix.connector }}
          file: ./packages/connectors/${{ matrix.connector }}/Dockerfile
          tags: |
            syncmaven/${{ matrix.connector }}:${{ needs.prepare-tags.outputs.docker_tag }}
            syncmaven/${{ matrix.connector }}:${{ needs.prepare-tags.outputs.secondary_docker_tag }}
          outputs: type=registry,push=true
      - name: "Update Docker Hub description"
        uses: peter-evans/dockerhub-description@v4
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          repository: syncmaven/${{ matrix.connector }}
          short-description: "Implementation of the connector ${{ matrix.connector }} for Syncmaven"
          readme-filepath: README.dockerhub-connector.md
